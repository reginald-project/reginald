name: Build

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  build:
    name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { goos: "linux", goarch: "amd64", os: "ubuntu-latest" }
          - { goos: "linux", goarch: "arm64", os: "ubuntu-24.04-arm" }
          - { goos: "windows", goarch: "amd64", os: "windows-latest" }
          - { goos: "windows", goarch: "arm64", os: "windows-11-arm" }
          - { goos: "darwin", goarch: "amd64", os: "macos-13" }
          - { goos: "darwin", goarch: "arm64", os: "macos-latest" }
      fail-fast: false

    steps:
      - name: Clone the source code
        uses: actions/checkout@v4.2.2

      - name: Install the Go toolchain
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod

      - name: Display the platform information for Go
        run: |
          go env GOOS
          go env GOARCH
          go version

      - name: Resolve the version number
        shell: bash
        run: |
          ARTIFACT_VERSION="$(cat VERSION)-0.canary.${{ github.run_number }}"
          VERSION="${ARTIFACT_VERSION}+${{ github.sha }}.$(date -u +"%Y%m%d%H%M%S")"
          echo "ARTIFACT_VERSION=${ARTIFACT_VERSION}" >> "${GITHUB_ENV}"
          echo "VERSION=${VERSION}" >> "${GITHUB_ENV}"

      - name: Resolve the build output
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "BUILD_OUTPUT=reginald.exe" >> "${GITHUB_ENV}"
          else
            echo "BUILD_OUTPUT=reginald" >> "${GITHUB_ENV}"
          fi

      - name: Verify and download dependencies
        run: |
          go mod verify
          go mod download

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: make build GOFLAGS="-v" OUTPUT="${{ env.BUILD_OUTPUT }}" VERSION="${{ env.VERSION }}"

      - name: Run the version command
        if: ${{ runner.os != 'Windows' }}
        run: ./reginald --version

      - name: Run the version command on Windows
        if: ${{ runner.os == 'Windows' }}
        run: .\reginald.exe --version

      - name: Determine the artifact name
        shell: bash
        run: echo "ARTIFACT_NAME=reginald-${{ env.ARTIFACT_VERSION }}-${{ matrix.goos }}-${{ matrix.goarch }}" >> "${GITHUB_ENV}"

      - name: Upload the build artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.BUILD_OUTPUT }}
          if-no-files-found: error
